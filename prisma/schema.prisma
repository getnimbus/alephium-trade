generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x", "linux-musl-arm64-openssl-3.0.x"]
  previewFeatures = ["views", "driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trade {
  id                    String   @db.VarChar
  block                 Int
  tx_hash               String
  from_token_address    String
  to_token_address      String
  sender_address        String
  origin_sender_address String
  quanlity_in           Float    @default(0)
  quanlity_out          Float    @default(0)
  log_index             Int
  exchange_name         String
  timestamp             DateTime @db.Timestamptz(6)
  pool_address          String
  amount_usd            Float    @default(0)
  chain                 String
  fee                   Float    @default(0)
  native_price          Float    @default(0)

  @@id([id, chain])
  @@index([chain, block])
  @@index([chain])
  @@index([origin_sender_address, timestamp])
  @@index([origin_sender_address, chain])
  @@index([to_token_address])
  @@index([from_token_address])
  @@index([sender_address, timestamp])
  @@index([origin_sender_address])
  @@map("trade")
}

model Pool {
  id            String  @id @db.VarChar
  pool          String
  token0        String
  token0Decimal Int     @map("token0_decimal")
  token1        String
  token1Decimal Int     @map("token1_decimal")
  fee           Float?  @default(0)
  exchangeName  String  @map("exchange_name")
  chain         String?

  @@index([chain])
  @@index([pool, chain])
  @@index([token0])
  @@index([token1])
  @@map("pool")
}

model Tokens {
  id             String    @id @default(uuid()) @db.VarChar
  token_address  String    @db.VarChar
  token_symbol   String?   @db.VarChar
  token_name     String?   @db.VarChar
  token_decimals Int
  chain          String    @db.VarChar
  logo           String?   @db.VarChar
  created_at     DateTime  @default(now())
  updated_at     DateTime? @updatedAt

  @@unique([chain, token_address])
  @@index([chain])
  @@map("tokens")
}
